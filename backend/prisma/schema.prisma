// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_DATABASE_URL")
}

model User {
  id              Int               @id @default(autoincrement())
  phoneNumber     String            @unique
  firstName       String?
  lastName        String?
  relusertenant   RelUserTenant[]
  wallet          Wallet?           @relation(fields: [walletId], references: [id])
  walletId        Int?              @unique
}

model Wallet {
  id              Int              @id @default(autoincrement())
  pointBalance    Int
  tenants         Tenant[]         @relation("TenantWallet")
  user            User?             @relation
}

model Tenant {
  id                Int              @id @default(autoincrement())
  description       String
  imageUrl          String
  vouchers          Voucher[]
  coupons           Coupon[]
  relusertenant     RelUserTenant[]
  wallets           Wallet[]         @relation("TenantWallet")
}

model Coupon {
  id              Int               @id @default(autoincrement())
  description     String
  name            String
  imageUrl        String
  currency        String
  discountValue   Int
  discountType    DiscountType?     @relation(fields: [discountTypeId], references: [id])
  discountTypeId  Int?
  tenant          Tenant            @relation(fields: [tenantId], references: [id])
  tenantId        Int
}

model Voucher {
  id              Int               @id @default(autoincrement())
  description     String
  name            String
  imageUrl        String
  currency        String
  discountValue   Int
  discountType    DiscountType?     @relation(fields: [discountTypeId], references: [id])
  discountTypeId  Int?
  tenant          Tenant            @relation(fields: [tenantId], references: [id])
  tenantId        Int
}

model DiscountType {
  id                Int              @id @default(autoincrement())
  name              String
  vouchers          Voucher[]
  coupons           Coupon[]
}

model RelUserTenant {
  id       Int      @id @default(autoincrement())
  user     User     @relation(fields: [userId], references: [id])
  userId   Int
  tenant   Tenant   @relation(fields: [tenantId], references: [id])
  tenantId Int

  @@unique([userId, tenantId])
}
